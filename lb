#!/bin/bash

# Config variables
domain_name="pseudot.org"
webdir="$(pwd)/Site"

# File structure specific variables
# The web directory structure uses subdomains
# The $domain_name variable is to be used twice, as each subdomain has its own dedicated folder.
blogfile="$webdir/$domain_name/$(date +%Y).html"
indexfile="$webdir/$domain_name/blogindex.html"
archivefile="$webdir/.htaccess"

# Variables for publishing
protocol="https"
gitrepo="andutzu7/pseudot.git"
gittoken=""
remotehost=""



[ -z "$EDITOR" ] && EDITOR="vim"

[ ! -d "$webdir/.drafts" ] &&
read -erp "Initialize blog in $webdir?" ask &&
	if [ "$ask" = "y" ]; then
	printf "Initializing blog system...\\n"
	mkdir -pv "$webdir/.drafts" || printf "Error. Do you have write permissions in this directory?\\n"
	echo "Options +Indexes" > "$archivefile"
else
	exit
fi

newpost() { read -erp "Give a title for your post:
	" title
	echo "$title" | grep -q "\"" && printf "Double quotation marks (\") are not allowed in entry titles.\\n" && exit
	abs_url="$(echo "$title" | iconv -cf UTF-8 -t UTF-8 | tr -d '[:punct:]' | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | sed "s/-\+/-/g;s/\(^-\|-\$\)//g")"
	echo "AddDescription \"$title\" \"$url.md\"" >>  "$archivefile"|| { echo "Error: Is $archivefile writeable?"; exit; }

	echo "$webdir/$webtarget/posts/$abs_url"
	echo "lalalalala"
	( [ -f "$webdir/.drafts/$abs_url/$abs_url.md" ] || [ -f "$webdir/$webtarget/posts/$abs_url" ] ) && echo "There is already an existing draft or post of that same name/URL." && exit
	mkdir -p "$webdir/.drafts/$abs_url";
	$EDITOR "$webdir/.drafts/$abs_url/$abs_url.md" ;}

listandReturn() {
	printf "Listing contents of %s\\n" "$1"
	case "$(ls "$1" | wc -l)" in
		0) echo "There's nothing to $2." && exit 1 ;;
		1) number=1 && printf "There's only one entry to %s.\\nDefaulting selection to %s\\n" "$2" "$(ls -rc "$1" | awk -F '/' '{print $NF}')" ;;
		*) ls -rc "$1" | awk -F '/' '{print $NF}' | nl
                read -erp "Pick an entry by number to $2, or press Ctrl-C to cancel. " number ;;
	esac
	chosen="$(ls -rc "$1" | nl | grep -w " $number" | awk '{print $2}')"
	basefile="$(basename "$chosen")" && base="${basefile%.*}"
}

publish() { \
	delete draft
	htaccessentry=$(grep "$basefile" "$archivefile")

	title="$(echo "$htaccessentry" | cut -d'"' -f2)"
	webdate="$(date '+%a, %d %b %Y %H:%M:%S %z')" # But this visible date you can set to any format.
	tmpdir=$(mktemp -d)
	$(cp -r "$webdir/.drafts/$basefile" "$webdir/$webtarget/posts/")
	$(markdown-to-standalone-html -t "$webdir/$webtarget/template.html" "$webdir/$webtarget/posts/$basefile/$basefile.md" > "$webdir/$webtarget/posts/$basefile/$basefile.html");
	printf "<div class='entry'>\\n<h2 id='%s'>%s</h2>\\n<small>[<a href='%s'>standalone</a>]</small>\\n%s...\\n<small>%s</small>\\n</div>\\n" "$base" "$title" "$website/posts/$basefile/$basefile.html" "$(head -n 2 "$webdir/.drafts/$basefile/$basefile.md" | sed -e 's/#/ /g')" "$webdate" > "$tmpdir/html"
	printf "<div class='article'>\\n<h3 class='subtitle' id='%s'>%s</h3>\\n<p>%s... <small><a href='%s'>Read more &#187;</a></small> </p> \\n</div>\\n" "$basefile" "$title" "$(head -n 2 "$webdir/.drafts/$basefile/$basefile.md" | sed -e 's/#/ /g')" "$website/posts/$basefile/$basefile.html"  > "$tmpdir/html2"
	printf "<li>%s &ndash; <a href=\"%s\">%s</a></li>\\n" "$(date '+%Y %b %d')" "$website/posts/$basefile/$basefile.html" "$realname" > "$tmpdir/index"
	cat $tmpdir/html >> "$blogfile"
	cat $tmpdir/html2 >> "$webtarget_archive_file"
	sed -i "/<!-- LB -->/r $tmpdir/index" "$indexfile"
	sed -i "/ \"$base.html\"/d" "$archivefile"
	article_path=$webdir/$webtarget_archive_file;
	sed -i "/<div class='articles'>/r $article_path" "$webdir/$webtarget/index.html"
	sed -i "/<p>Cele mai recente postari:<\/p>/r $blogfile" "$webdir/$domain_name/index.html"
	rm "$webdir/$webtarget/posts/$basefile/$basefile.md"
	rm -rf "$webdir/.drafts/$chosen"
	push

	impose_changes
}

confirm() { read -erp "Really $1 \"$base\"? (y/N) " choice && echo "$choice" | grep -qi "^y$" || exit 1 ;}

push() { git add . ; git commit -m "new post" ; git push "https://$gittoken/$gitrepo";}

impose_changes() { ssh $remotehost -t "cd /var/www/Pseudot;/bin/git pull;/bin/systemctl restart nginx" ;}

delete() { \
	indexpath=$webdir/$webtarget/posts/$base.html
	sed -i "/<div class='entry'>/{:a;N;/<\\/div>/!ba};/id='$base'/d" "$webdir/$domain_name/index.html"
	sed -i "/<div class='article'>/{:a;N;/<\\/div>/!ba};/id='$base'/d" "$webdir/$webtarget/index.html"
	# Maybe someday
	sed -i "\@<li>.*<a href=\"$indexpath\">@d" "$indexfile"
	rm -rf "$webdir/$webtarget/posts/$basefile" && [[ "$1" != "draft" ]] && printf "Old blog entry removed.\\n";
	push
	impose_changes
}

revise() {
	if [ ! -d "$webdir/.drafts/$chosen" ];then
	mkdir -p "$webdir/.drafts/${chosen%%.*}/";
	fi
	awk '/^<small>\[/{flag=1;next}/<footer>/{flag=0}flag' "$webdir/$webtarget/posts/$chosen/$chosen.html" > "$webdir/.drafts/$chosen/$chosen.html"
	"$EDITOR" "$webdir/.drafts/${chosen%%.*}/$chosen.html"
	push

	printf "Revision stored in .drafts. Publish as normal entry when desired.\\n" ;}
display_help()
{
   echo "lb - Utilitary for automating blog management tasks.";
   echo
   printf "Usage:\\n  lb a:\\tnew draft\\n  lb e:\\tedit draft\\n  lb p:\\tpublish draft\\n  lb r:\\trevise published entry\\n  lb t:\\tdiscard draft\\n  lb d:\\tdelete published entry\\n\\nBe sure to have the following pattern added to your blog file and blog index:\\n\\n<!-- LB -->\\n\\nNew content will be added directly below that sequence and it is required.\\n"
}

if [ $# -le 0 ]
then

echo "Command syntax: lb [ACTION] [TARGET]"
echo
echo "Run the command «lb h» for more information"
exit

fi

# separating the main functionalities in regards to the number of parameters
if [ -z $2 ]
then
# one parameter actions
case "$1" in
	h*) display_help;;
	*) printf "Usage:\\n  lb a:\\tnew draft\\n  lb e:\\tedit draft\\n  lb p:\\tpublish/finalize draft\\n  lb r:\\trevise published entry\\n  lb t:\\tdiscard draft\\n  lb d:\\tdelete published entry\\n\\nBe sure to have the following pattern added to your RSS feed, blog file and blog index:\\n\\n<!-- LB -->\\n\\nNew content will be added directly below that sequence. This is required.\\n" ;;
esac
else
website="$protocol://$2.$domain_name";

webtarget="$2.$domain_name"
webtarget_archive_file="$webdir/$2.$domain_name/$(date +%Y).html"
touch "$webtarget_archive_file";
# multiple parameter actions
case "$1" in
	a*) newpost ;;
	p*) listandReturn "$webdir"/.drafts/ publish && publish ;;
	d*) listandReturn "$webdir"/"$webtarget/posts" delete && confirm delete && delete && sed -i "/ \"$base.html\"/d" ;;
	r*) listandReturn "$webdir"/"$webtarget/posts" revise && revise ;;
	e*) listandReturn "$webdir"/.drafts/ edit && "$EDITOR" "$webdir/.drafts/$chosen/$chosen.md" ;;
	t*) listandReturn "$webdir"/.drafts/ trash && confirm trash && rm -rf "$webdir/.drafts/$chosen" && sed -i "/ \"$base.html\"/d" ; printf "Draft deleted.\\n" ;;
	*) printf "Usage:\\n  lb a:\\tnew draft\\n  lb e:\\tedit draft\\n  lb p:\\tpublish/finalize draft\\n  lb r:\\trevise published entry\\n  lb t:\\tdiscard draft\\n  lb d:\\tdelete published entry\\n\\nBe sure to have the following pattern added to your RSS feed, blog file and blog index:\\n\\n<!-- LB -->\\n\\nNew content will be added directly below that sequence. This is required.\\n" ;;
esac
fi
